########Procesamiento de datos############
colnames(NBA2020)
filter(NBA2020,Player %in% c("Lamarcus Albridge"))
View(summary)
filter(NBA2020,Player %in% c("Lamarcus Albridge"))
View(NBA)
View(NBA)
filter(NBA2020,Player %in% c("LaMarcus Aldridge"))
filter(NBA2020,NBA2020$Player %in% c("LaMarcus Aldridge"))
filter(NBA2020,NBA2020$Player =  c("LaMarcus Aldridge"))
filter(NBA2020,NBA2020$Player <-  c("LaMarcus Aldridge"))
View(server)
View(server)
NBA %>% select(Player,LaMarcus Albridge)
NBA %>% select(Player,"LaMarcus Albridge")
library(magrittr)
NBA %>% select(Player,"LaMarcus Albridge")
install.packages("dplyr")
library(dplyr)
install.packages("dplyr")
install.packages("dplyr")
NBA %>% select(Player,"LaMarcus Albridge")
NBA %>% select(Player,"LaMarcus Albridge")
NBA_FG <- select(Player,"LaMarcus Albridge")
NBA_FG <- filter(NBA$Player,"LaMarcus Albridge")
#########################Visualización#############################
ggplot(head(NBA2020, n = 10), aes(x = Player, y = Fields.Goal)) +
geom_bar(stat = 'identity', fill = "red") +
xlab("Jugadores") +
ggtitle("NBA PLAYERS FIELDS GOALS", subtitle = "2020")
require(ggplot2)
#########################Visualización#############################
ggplot(head(NBA2020, n = 10), aes(x = Player, y = Fields.Goal)) +
geom_bar(stat = 'identity', fill = "red") +
xlab("Jugadores") +
ggtitle("NBA PLAYERS FIELDS GOALS", subtitle = "2020")
library(ggplot2)
library(magrittr)
library(sqldf)
library(dplyr)
##########Obtención de los datos######################
NBA <-
as.data.frame(read.csv("C:/Users/rafiel/Desktop/R DEMO NBA/NBA_stats.csv"))
NBA2021 <- sqldf('SELECT * FROM NBA WHERE Year = 2021')
NBA2020 <- sqldf('SELECT * FROM NBA WHERE Year = 2020')
########Procesamiento de datos############
colnames(NBA2020)
NBA2020_assists <- data.frame(NBA,Player,Assits)
NBA2020_assists <- ?data.frame(NBA,Player,Assits)
?data.frame
NBA2020_assists <- data.frame(NBA$Player,NBA$Assists)
View(NBA2020_assists)
View(NBA2020_assists)
d <- data.frame(lapply(d, function(x) {gsub("Ã", "À", x)}))
NBA <- data.frame(lapply(d, function(x) {gsub("Ã", "À", x)}))
NBA <- data.frame(lapply(NBA, function(x) {gsub("Ã", "À", x)}))
##########Obtención de los datos######################
NBA <-
as.data.frame(read.csv("C:/Users/rafiel/Desktop/R DEMO NBA/NBA_stats.csv"))
NBA <- data.frame(lapply(NBA, function(x) {gsub("Ã", "À", x)}))
NBA2021 <- sqldf('SELECT * FROM NBA WHERE Year = 2021')
NBA2020 <- sqldf('SELECT * FROM NBA WHERE Year = 2020')
NBA2020_assists <- data.frame(NBA$Player,NBA$Assists)
View(NBA2020_assists)
View(NBA2020_assists)
ggplot(NBA2020_assists, aes(x = Player, y = assists) +
geom_line(stat = "identity") +
xlab("Jugadores") +
ggtitle("NBA PLAYERS ASSISTS", subtitle = "2020"))
ggplot(NBA2020_assists, aes(x = Player, y = assists) +
geom_point(stat = "identity") +
xlab("Jugadores") +
ggtitle("NBA PLAYERS ASSISTS", subtitle = "2020"))
ggplot(NBA2020_assists, aes(y = assists) +
geom_point(stat = "identity") +
xlab("Jugadores") +
ggtitle("NBA PLAYERS ASSISTS", subtitle = "2020"))
ggplot(NBA2020_assists, aes(y = assists) +
geom_point(stat = "identity") +
xlab("Jugadores") +
ggtitle("NBA PLAYERS ASSISTS", subtitle = "2020"))
NBA2020_assists$NBA.Assists
NBA2020_assists <- data.frame(NBA$Player,as.numeric(NBA$Assists))
ggplot(NBA2020_assists, aes(y = assists) +
geom_point(stat = "identity") +
xlab("Jugadores") +
ggtitle("NBA PLAYERS ASSISTS", subtitle = "2020"))
ggplot(NBA2020_assists, aes(x = Player, y = assists) +
geom_point(stat = "identity") +
xlab("Jugadores") +
ggtitle("NBA PLAYERS ASSISTS", subtitle = "2020"))
NBA2020_assists$as.numeric.NBA.Assists.
NBA2020_assists$as.numeric.NBA.Assists
NBA2020_assists$NBA.Assists
NBA2020_assists$NBA.Assists
NBA$Assists
NBA2020_assists <- data.frame(NBA$Player, NBA$Assists)
NBA2020_assists$NBA.Assists.<-as.numeric(NBA2020_assists$NBA.Assists)
NBA2020_assists$NBA.Assists<-as.numeric(NBA2020_assists$NBA.Assists)
NBA2020_assists <- data.frame(NBA$Player, NBA$Assists)
NBA2020_assists$NBA.Assists<-as.numeric(NBA2020_assists$NBA.Assists)
head(NBA2020_assists$NBA.Assists)
ggplot(NBA2020_assists, aes(x = Player, y = assists) +
geom_point(stat = "identity") +
xlab("Jugadores") +
ggtitle("NBA PLAYERS ASSISTS", subtitle = "2020"))
ggplot(NBA2020_assists, aes(x = NBA.Player, y = NBA.Assists) +
geom_point(stat = "identity") +
xlab("Jugadores") +
ggtitle("NBA PLAYERS ASSISTS", subtitle = "2020"))
colnames(NBA2020_assists)
NBA2020_assists
ggplot(NBA2020_assists, aes(x = NBA.Player, y = NBA.Assists) +
geom_point(stat = "identity") +
xlab("Jugadores") +
ggtitle("NBA PLAYERS ASSISTS", subtitle = "2020"))
ggplot(NBA2020_assists, aes(x = NBA.Player, y = NBA.Assists) +
geom_bar(stat = "identity") +
xlab("Jugadores") +
ggtitle("NBA PLAYERS ASSISTS", subtitle = "2020"))
ggplot(NBA2020_assists, mapping =  aes(x = NBA.Player, y = NBA.Assists) +
geom_bar(stat = "identity") +
xlab("Jugadores") +
ggtitle("NBA PLAYERS ASSISTS", subtitle = "2020"))
ggplot(head(NBA2020_assists, n = 10), aes(x = NBA.Player, y = NBA.Assists)) +
geom_bar(stat = 'identity', fill = "red") +
xlab("Jugadores") +
ggtitle("NBA PLAYERS FIELDS GOALS",subtitle = "2021")
NBA2020_rebounds <- data.frame(Player = NBA$Player , Rebounds = NBA$Total.Rebounds)
class(NBA2020_rebounds)
class(NBA2020_rebounds$Rebounds)
NBA2020_rebounds$Rebounds
NBA2020_rebounds$Rebounds <-as.numeric(NBA2020_rebounds$Rebounds)
ggplot(head(NBA2020_rebounds, n = 10), aes(x = Player, y = Rebounds)) +
geom_bar(stat = 'identity', fill = "red") +
xlab("Jugadores") +
ggtitle("NBA PLAYERS REBOUNDS",subtitle = "2020")
NBA2020_FieldGoal_effectivity  <- data.frame(Player = NBA2020$Fields.Goal, FieldGoals2020 = NBA2020$Fields.Goal, fieldGoals2021 = NBA2021$Fields.Goal, effectivity = (sum(FieldGoals2020) + sum(fieldGoals2021))/2)
NBA2020_FieldGoal_effectivity  <- data.frame(Player = NBA2020$Fields.Goal, FieldGoals2020 = NBA2020$Fields.Goal, fieldGoals2021 = NBA2021$Fields.Goal, effectivity = (sum(NBA2020$Fields.Goal) + sum(NBA2021$Fields.Goal))/2)
NBA2020_FieldGoal_effectivity  <- data.frame(Player = NBA2020$Fields.Goal, FieldGoals2020 = NBA2020$Fields.Goal, fieldGoals2021 = NBA2021$Fields.Goal, effectivity = (sum(as.numeric(NBA2020$Fields.Goal)) + sum(as.numeric(NBA2021$Fields.Goal)))/2)
NBA2020_FieldGoal_effectivity  <- data.frame(Player = NBA2020$Fields.Goal, FieldGoals2020 = NBA2020$Fields.Goal, fieldGoals2021 = NBA2021$Fields.Goal)
View(NBA2020)
View(NBA2020)
NBA2020_free_trhows <- data.frame(Player = NBA$Player, FreeThrows = NBA2020$Free.Throws)
NBA2020_free_trhows <- data.frame(Player = NBA2020$Player, FreeThrows = NBA2020$Free.Throws)
NBA2020_free_trhows$FreeThrows
NBA2020_assists$NBA2020.Assists<-as.numeric(NBA2020_assists$NBA2020.Assists)
NBA2020_free_trhows$FreeThrows <- as.numeric(NBA2020_free_trhows$FreeThrows)
View(NBA2020_free_trhows)
View(NBA2020_free_trhows)
View(NBA2020_free_trhows)
View(NBA2020_free_trhows)
ggplot(head(NBA2020_free_trhows, n = 10), aes(x = Player, y = FreeThrows)) +
geom_bar(stat = 'identity', fill = "red") +
xlab("Jugadores") +
ggtitle("NBA PLAYERS FREE THROWS",subtitle = "2020")
NBA2020_Faults <- data.frame(Player = NBA2020$Player, Faults = NBA2020$Personal.Fouls)
NBA2020_Faults$Faults<-as.numeric(NBA2020_Faults$Faults)
ggplot(head(NBA2020_Faults, n = 10), aes(x = Player, y = Faults)) +
geom_bar(stat = 'identity', fill = "red") +
xlab("Jugadores") +
ggtitle("NBA PLAYERS FAULTS",subtitle = "2020")
LaMarcus <- sqldf("SELECT * FROM NBA2020_Faults WHERE Player = 'LaMarcus Aldridge'")
View(LaMarcus)
View(LaMarcus)
LaMarcusGoals2020 <- sqldf("SELECT Player,Fields.Goal FROM NBA2020 WHERE Player = 'LaMarcus Aldridge'")
LaMarcusGoals2020 <- sqldf("SELECT Player,NBA2020$Fields.Goal FROM NBA2020 WHERE Player = 'LaMarcus Aldridge'")
LaMarcusGoals2020 <- sqldf("SELECT Player, Fields.Goal FROM NBA2020 WHERE Player = 'LaMarcus Aldridge'")
View(NBA2020)
View(NBA2020)
LaMarcusGoals2020 <- sqldf("SELECT * FROM NBA2020 WHERE Player = 'LaMarcus Aldridge'")
LaMarcusGoals2021 <- sqldf("SELECT * FROM NBA2021 WHERE Player = 'LaMarcus Aldridge'")
View(LaMarcusGoals2020)
View(LaMarcusGoals2020)
View(LaMarcusGoals2021)
View(LaMarcusGoals2021)
LaMarcusEffectivityGoals <- sum(as.numeric(LaMarcusGoals2020$Fields.Goal)) + sum(as.numeric(LaMarcusGoals2021$Fields.Goal))/ 2
LaMarcusEffectivityGoals <- sum(as.numeric(LaMarcusGoals2020$Fields.Goal)) + sum(as.numeric(LaMarcusGoals2021$Fields.Goal))/ 2 * 100
LaMarcusEffectivityGoals <- sum(as.numeric(LaMarcusGoals2020$Fields.Goal)) + sum(as.numeric(LaMarcusGoals2021$Fields.Goal))/ 100
LaMarcusEffectivityGoals <- sum(as.numeric(LaMarcusGoals2020$Fields.Goal)) + sum(as.numeric(LaMarcusGoals2021$Fields.Goal))
LaMarcusEffectivityGoals <- sum(as.numeric(LaMarcusGoals2020$Fields.Goal)) + sum(as.numeric(LaMarcusGoals2021$Fields.Goal))/2
LaMarcusEffectivityGoals <- sum(as.numeric(LaMarcusGoals2020$Fields.Goal)) + sum(as.numeric(LaMarcusGoals2021$Fields.Goal))/2 * 100
LaMarcusEffectivityGoals <- (sum(as.numeric(LaMarcusGoals2020$Fields.Goal)) + sum(as.numeric(LaMarcusGoals2021$Fields.Goal)))/2
LaMarcusEffectivityGoals <- (sum(as.numeric(LaMarcusGoals2020$Fields.Goal)) + sum(as.numeric(LaMarcusGoals2021$Fields.Goal)))/2 * 100
LaMarcusEffectivityGoals <- (sum(as.numeric(LaMarcusGoals2020$Fields.Goal)) + sum(as.numeric(LaMarcusGoals2021$Fields.Goal)))/2 /100
LaMarcusEffectivityGoals <- (sum(as.numeric(LaMarcusGoals2020$Fields.Goal)) - sum(as.numeric(LaMarcusGoals2021$Fields.Goal.Attempted)))
LaMarcusEffectivityGoals <- (sum(as.numeric(LaMarcusGoals2020$Fields.Goal)) - sum(as.numeric(LaMarcusGoals2020$Fields.Goal.Attempted)))
for(i in 1:count(NBA2020)) {
Print("It function!")
}
for(i in 1:count(NBA2020$Player)) {
Print("It function!")
}
for(i in 1:count(NBA2020$Game)) {
Print("It function!")
}
for(i in 1:651) {
Print("It function!")
}
for(i in 1:651) {
Hey
}
Goals_Effectivity <- for(i in 1:651) {
NBA2020[i]$Fields.Goal - NBA2020[i]$Fields.Goal.Attempted
}
Goals_Effectivity <- for(i in 1:651) {
as.numeric(NBA2020[i]$Fields.Goal) - as.numeric(NBA2020[i]$Fields.Goal.Attempted)
}
Goals_Effectivity <- for(i in 1:651) {
as.numeric(NBA2020[i]$Fields.Goal) - as.numeric(NBA2020[i]$Fields.Goal.Attempted)
}
Goals_Effectivity <- for(i in 1:651) {
as.numeric(NBA2020$Fields.Goal[i]) - as.numeric(NBA2020$Fields.Goal.Attempted[i])
}
Goals_Effectivity <-
Players_Goals_Effectivity <- data.frame(Player = NBA2020$Player, Effectivity = for(i in 1:651) {
as.numeric(NBA2020$Fields.Goal[i]) - as.numeric(NBA2020$Fields.Goal.Attempted[i])
})
library(fbasics)
install.packages(Fbasics)
install.packages(fbasics)
install.packages("fbasics")
install.packages("fBasics")
library(fBasics)
numerics_vars <- Class[Class$variable_class == "numeric",]
Class <- as.data.frame(sapply(NBA2020, class))
colnames(Class) <- "variable_class"
Class$variable_name <- row.names(Class)
numerics_vars <- class[Class$variable_class == "numeric",]
class[Class$variable_class == "numeric",]
Class[Class$variable_class == "numeric",]
View(Class)
View(Class)
class[Class$variable_class == "numeric",]
Class <- as.data.frame(sapply(NBA, class))
colnames(Class) <- "variable_class"
Class$variable_name <- row.names(Class)
numerics_vars <- class[Class$variable_class == "numeric",]
Class[Class$variable_class == "numeric",]
Class[Class$variable_class == "character",]
Class[Class$variable_class == "integer",]
Class[Class$variable_class == "numeric",]
##########Obtención de los datos######################
NBA <-
as.data.frame(read.csv("C:/Users/rafiel/Desktop/R DEMO NBA/NBA_stats.csv"))
NBA <- data.frame(lapply(NBA, function(x) {gsub("Ã", "À", x)}))
Class <- as.data.frame(sapply(NBA, class))
colnames(Class) <- "variable_class"
Class$variable_name <- row.names(Class)
head(NBA2020)
n
numerics_vars <- class[Class$variable_class == "numeric",]
ggplot(head(NBA2020_free_trhows, n = 10), aes(x = Player, y = FreeThrows)) +
geom_bar(stat = 'identity', fill = "red") +
xlab("Jugadores") +
ggtitle("NBA PLAYERS FREE THROWS",subtitle = "2020")
Class[Class$variable_class == "character",]
Class[Class$variable_class == "integer",]
Class[Class$variable_class == "numeric",]
##########Obtención de los datos######################
NBA <-
as.data.frame(read.csv("C:/Users/rafiel/Desktop/R DEMO NBA/NBA_stats.csv"))
Class[Class$variable_class == "character",]
Class[Class$variable_class == "integer",]
N
NBA <- data.frame(lapply(NBA, function(x) {gsub("Ã", "À", x)}))
##########Obtención de los datos######################
NBA <-
as.data.frame(read.csv("C:/Users/rafiel/Desktop/R DEMO NBA/NBA_stats.csv"))
NBA <- data.frame(lapply(NBA, function(x) {gsub("Ã", "À", x)}))
Class[Class$variable_class == "integer",]
##########Obtención de los datos######################
NBA <- as.data.frame(read.csv("C:/Users/rafiel/Desktop/R DEMO NBA/NBA_stats.csv"))
View(NBA)
View(NBA)
Class <- as.data.frame(sapply(NBA, class))
colnames(Class) <- "variable_class"
Class$variable_name <- row.names(Class)
Class[Class$variable_class == "character",]
Class[Class$variable_class == "integer",]
Class[Class$variable_class == "numeric",]
##########Obtención de los datos######################
NBA <- as.data.frame(read.csv("C:/Users/rafiel/Desktop/R DEMO NBA/NBA_stats.csv"))
View(NBA)
View(NBA)
#################NBA 2021#####################
NBA2021_assists <- data.frame(NBA2021$Player, NBA2021$Assists)
NBA2021_assists$NBA.Assists<-as.numeric(NBA2021_assists$NBA.Assists)
NBA2021_rebounds <- data.frame(Player = NBA$Player , Rebounds = NBA$Total.Rebounds)
NBA2021_rebounds$Rebounds <-as.numeric(NBA2021_rebounds$Rebounds)
NBA2021_free_trhows <- data.frame(Player = NBA2021$Player, FreeThrows = NBA2021$Free.Throws)
NBA2021_free_trhows$FreeThrows <- as.numeric(NBA2021_free_trhows$FreeThrows)
NBA2020_Faults <- data.frame(Player = NBA2020$Player, Faults = NBA2020$Personal.Fouls)
NBA2020_Faults$Faults<-as.numeric(NBA2020_Faults$Faults)
ggplot(head(NBA2020, n = 10), aes(x = Player, y = Fields.Goal)) +
geom_bar(stat = 'identity', fill = "red") +
xlab("Jugadores") +
ggtitle("NBA PLAYERS FIELDS GOALS", subtitle = "2020")
ggplot(head(NBA2021, n = 10), aes(x = Player, y = Fields.Goal)) +
geom_bar(stat = 'identity', fill = "red") +
xlab("Jugadores") +
ggtitle("NBA PLAYERS FIELDS GOALS", subtitle = "2021")
ggplot(head(NBA2020, n = 10), aes(x = Player, y = Fields.Goal)) +
geom_bar(stat = 'identity', fill = "red") +
xlab("Jugadores") +
ggtitle("NBA PLAYERS FIELDS GOALS", subtitle = "2020")
ggplot(head(NBA2020_assists, n = 10), aes(x = NBA.Player, y = NBA.Assists)) +
geom_bar(stat = 'identity', fill = "red") +
xlab("Jugadores") +
ggtitle("NBA PLAYERS ASSISTS",subtitle = "2020")
ggplot(head(NBA2021, n = 10), aes(x = Player, y = Fields.Goal)) +
geom_bar(stat = 'identity', fill = "red") +
xlab("Jugadores") +
ggtitle("NBA PLAYERS FIELDS GOALS", subtitle = "2021")
ggplot(head(NBA2020, n = 10), aes(x = Player, y = Fields.Goal)) +
geom_bar(stat = 'identity', fill = "red") +
xlab("Jugadores") +
ggtitle("NBA PLAYERS FIELDS GOALS", subtitle = "2020")
ui <- dashboardPage(
dashboardHeader(title = "NBA PLAYERS STATS 2020 - 2021", titleWidth = 1000),
dashboardSidebar(disable = T),
dashboardBody(
fluidRow(
valueBox(nrow(NBA2020), "PLAYERS 2020", icon = icon("basketball-ball")),
valueBox(nrow(NBA2021), "PLAYERS 2021", icon = icon("basketball-ball"))
),
fluidRow(
box(plotOutput("NBA2020_FieldGoal",width = 1000,height = 600)),
),
fluidRow(
box(plotOutput("NBA2021_FieldGoal",width = 1000,height = 600))
)
)
)
server <- function(input, output) {
output$NBA2020_FieldGoal <- renderPlot({
ggplot(head(NBA2020, n = 10), aes(x = Player, y = Fields.Goal)) +
geom_bar(stat = 'identity', fill = "red") +
geom_text(aes(label = Fields.Goal), vjust = 1.5, colour = "white") +
xlab("Jugadores") +
ggtitle("NBA PLAYERS FIELDS GOALS", subtitle = "2020")
})
output$NBA2021_FieldGoal <- renderPlot({
ggplot(head(NBA2021, n = 10), aes(x = Player, y = Fields.Goal)) +
geom_bar(stat = 'identity', fill = "red") +
geom_text(aes(label = Fields.Goal), vjust = 1.5, colour = "white") +
xlab("Jugadores") +
ggtitle("NBA PLAYERS FIELDS GOALS", subtitle = "2021")
})
}
shinyApp(ui,server)
##############Dashboard##################
library(shiny)
library(shinydashboard)
library(shinydashboard)
ui <- dashboardPage(
dashboardHeader(title = "NBA PLAYERS STATS 2020 - 2021", titleWidth = 1000),
dashboardSidebar(disable = T),
dashboardBody(
fluidRow(
valueBox(nrow(NBA2020), "PLAYERS 2020", icon = icon("basketball-ball")),
valueBox(nrow(NBA2021), "PLAYERS 2021", icon = icon("basketball-ball"))
),
fluidRow(
box(plotOutput("NBA2020_FieldGoal",width = 1000,height = 600)),
),
fluidRow(
box(plotOutput("NBA2021_FieldGoal",width = 1000,height = 600))
)
)
)
server <- function(input, output) {
output$NBA2020_FieldGoal <- renderPlot({
ggplot(head(NBA2020, n = 10), aes(x = Player, y = Fields.Goal)) +
geom_bar(stat = 'identity', fill = "red") +
geom_text(aes(label = Fields.Goal), vjust = 1.5, colour = "white") +
xlab("Jugadores") +
ggtitle("NBA PLAYERS FIELDS GOALS", subtitle = "2020")
})
output$NBA2021_FieldGoal <- renderPlot({
ggplot(head(NBA2021, n = 10), aes(x = Player, y = Fields.Goal)) +
geom_bar(stat = 'identity', fill = "red") +
geom_text(aes(label = Fields.Goal), vjust = 1.5, colour = "white") +
xlab("Jugadores") +
ggtitle("NBA PLAYERS FIELDS GOALS", subtitle = "2021")
})
}
shinyApp(ui,server)
install.packages('RJDBC')
install.packages('RODBC')
install.packages('DBI')
install.packages('rjava')
install.packages('devtools')
library(RODBC)
conn <- odbcConnect("HR_CONN",uid = "hr", pwd = "hr",believeNRows=FALSE)
conn <- odbcConnect("HR_CONN",uid = "hr", pwd = "hr",believeNRows=FALSE)
library(RODBC)
conn <- odbcConnect("xe",uid = "hr", pwd = "hr",believeNRows=FALSE)
conn <- odbcConnect("HR_CONN",uid = "hr", pwd = "hr",believeNRows=FALSE)
sqlQuery(conn,"SELECT * FROM hr.employees")
employees <- data.frame(sqlQuery(conn,"SELECT * FROM hr.employees"));
View(employees)
View(employees)
mean(employees)
mean(employees$SALARY)
?print
print("HOla")
print(mean(employees$SALARY))
print(mean(employees$SALARY) + salario promedio)
print(mean(employees$SALARY) + "salario promedio")
print(mean(employees$SALARY),"salario promedio")
mean(employees$SALARY)
install.packages("odbc")
library(odbc)
library(dplyr)
library(ggplot2)
plot(employees$JOB_ID, employees$SALARY)
?plot()
plot(employees$JOB_ID, employees$SALARY)
employees <- data.frame(sqlQuery(conn,"SELECT * FROM hr.employees"));
mean(employees$SALARY)
plot(employees$JOB_ID, employees$SALARY)
plot(employees$JOB_ID, employees$SALARY,
type = "p" )
plot(employees$JOB_ID, employees$SALARY,
type = p)
plot(employees$JOB_ID, employees$SALARY,
type = "p",
xlim = max(employees$JOB_ID),
ylim = max(employees$SALARY))
library(ggplot2)
ggplot(employees, aes(x=employees$JOB_ID, y=employees$SALARY)) +
geom_point()
ggplot(head(employees), aes(x=employees$JOB_ID, y=employees$SALARY)) +
geom_point()
ggplot(head(employees, 10), aes(x=employees$JOB_ID, y=employees$SALARY)) +
geom_point()
ggplot(employees, aes(x=employees$JOB_ID, y=employees$SALARY)) +
geom_point()
ggplot(employees, aes(x=JOB_ID, y=SALARY)) +
geom_point()
library(RODBC)
as.matrix(employees)
employees_matrix <- as.matrix(employees)
heatmap(employees_matrix)
View(employees)
View(employees)
employees_matrix <- as.matrix(employees$DEPARTMENT_ID + employees$SALARY)
heatmap(employees_matrix)
View(employees_matrix)
View(employees_matrix)
View(employees_matrix)
employees_numeric_data <- employees[:,]
employees_numeric_data <- employees[:,:]
employees_numeric_data <- employees[:,1:2]
employees_numeric_data <- employees[,1:2]
View(employees_numeric_data)
View(employees_numeric_data)
employees_numeric_data <- employees[,8:11]
View(employees_numeric_data)
View(employees_numeric_data)
employees_numeric_data <- employees[,[8,11]]
employees_numeric_data <- employees[,(8,11)]
employees_numeric_data <- employees[,[8,11]]
employees_numeric_data <- employees[,8:11]
employees_numeric_data <- employees[,c(8,11)]
View(employees_numeric_data)
View(employees_numeric_data)
employees_numeric_data <- employees[,c(8,11)]
employees_matrix <- as.matrix(employees_numeric_data)
heatmap(employees_matrix)
ggpair(employees_matrix)
ggpairs(employees_matrix)
install.packages('Ggallery')
library(Ggallery)
install.packages("GGally")
install.packages('Ggallly')
library(Ggally)
## Show plot graph for view a relationship between salary and the job
ggplot(employees, aes(x=JOB_ID, y=SALARY)) +
geom_bar()
## Show plot graph for view a relationship between salary and the job
ggplot(employees, aes(x=JOB_ID)) +
geom_bar()
## Show plot graph for view a relationship between salary and the job
ggplot(employees, aes(x=JOB_ID)) +
geom_point()
## Show plot graph for view a relationship between salary and the job
ggplot(employees, aes(x=JOB_ID, y=SALARY)) +
geom_point()
## Show plot graph for view a relationship between salary and the job
ggplot(employees, aes(x=JOB_ID, y=SALARY)) +
geom_point()
## Show plot graph for view a relationship between salary and the job
ggplot(employees, aes(x=JOB_ID, y=SALARY)) +
geom_point()
## Show plot graph for view a relationship between salary and the job
ggplot(employees, aes(x=JOB_ID, y=SALARY)) +
geom_point()
ggplot(employees, aes(x=JOB_ID, y=SALARY)) +
geom_point()
library(RODBC)
library(ggplot2)
conn <- odbcConnect("HR_CONN",uid = "hr", pwd = "hr",believeNRows=FALSE)
employees <- data.frame(sqlQuery(conn,"SELECT * FROM hr.employees"));
mean(employees$SALARY)
## Show plot graph for view a relationship between salary and the job
ggplot(employees, aes(x=JOB_ID, y=SALARY)) +
geom_point()
setwd("C:/Users/rafiel/Desktop/DIGESETT-data-analysis")
require('./DIGESETT_FALLECIDOS_DIA.R')
modules::use("DIGESETT_FALLECIDOS_DIA.R")
